{"version":3,"sources":["logo.svg","components/DomesticEnvGoodServices/data.js","components/DomesticEnvGoodServices/config.js","components/DomesticEnvGoodServices/DomesticEnvGoodServices.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","formatValue","value","numeral","format","keys","margin","defs","axisBottom","axisLeft","label","data","tooltipFormat","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","DomesticEnvGoodServices","class","config","indexBy","padding","colors","scheme","colorBy","axisTop","axisRight","labelSkipWidth","labelSkipHeight","labelTextColor","from","modifiers","href","React","Component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mJAAAA,EAAOC,QAAU,IAA0B,kC,sMCA5B,GACb,CACE,KAAQ,KACR,MAAS,UACT,SAAY,YAEd,CACE,KAAQ,KACR,MAAS,WACT,SAAY,a,kBCPhB,SAASC,EAAYC,GACnB,OAAOC,IAAQD,GAAOE,OAAO,cAGhB,OACXC,KAAM,CACJ,QACA,YAEFC,OAAQ,CACJ,IAAO,GACP,MAAS,GACT,OAAU,GACV,KAAQ,KAEZC,KAAM,GACNC,WAAY,CACR,SAAY,EACZ,YAAe,EACf,aAAgB,EAChB,OAAU,OACV,eAAkB,SAClB,aAAgB,IAEpBC,SAAU,CACN,SAAY,EACZ,YAAe,EACf,aAAgB,EAChB,OAAU,UACV,eAAkB,SAClB,cAAiB,GACjB,OAAW,SAAAP,GAAU,OAAOD,EAAYC,KAE5CQ,MAAQ,SAAAC,GAAS,OAAOV,EAAYU,EAAKT,QACzCU,cAAgB,SAAAV,GAAU,OAAOD,EAAYC,IAC7CW,QAAS,CACL,CACIC,SAAU,OACVC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,EACZC,WAAY,GACZC,aAAc,EACdC,UAAW,IACXC,WAAY,GACZC,cAAe,gBACfC,YAAa,IACbC,WAAY,GACZC,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHJ,YAAa,QCGtBK,G,8KAhDD,IAAD,EACL,OACE,yBAAKC,MAAM,qCACT,yBAAKA,MAAM,SACT,iIAGF,yBAAKA,MAAM,SACL,kBAAC,KAAD,GACInB,KAAMA,EACNN,KAAM0B,EAAO1B,KACb2B,QAAQ,OACR1B,OAAQyB,EAAOzB,OACf2B,QAAS,GACTC,OAAQ,CAAEC,OAAQ,QAClBC,QAAQ,KACRC,QAAS,KACTC,UAAW,KACX9B,WAAYuB,EAAOvB,WACnBC,SAAUsB,EAAOtB,SACjBC,MAAOqB,EAAOrB,MACd6B,eAAgB,GAChBC,gBAAiB,GACjBC,eAAgB,CAAEC,KAAM,QAASC,UAAW,CAAE,CAAE,SAAU,QAf9D,+BAgBoB,IAhBpB,gCAiBqB,IAjBrB,wBAkBaZ,EAAOlB,SAlBpB,yBAmBa,GAnBb,gCAoBqB,IApBrB,8BAqBmB,IArBnB,8BAsBmBkB,EAAOnB,eAtB1B,KA0BJ,yBAAKkB,MAAM,cACT,+CACE,uBAAGc,KAAK,+EAAR,+EACA,6BACA,oGACA,6BACA,yG,GA1CoBC,IAAMC,YCS7BC,MAXf,WACE,OACE,yBAAKC,UAAU,OACb,yBAAKlB,MAAM,mBACT,kBAAC,EAAD,SCEYmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.45fb5afe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default [\r\n  {\r\n    \"year\": 2017,\r\n    \"Goods\": 9637352000,\r\n    \"Services\": 16440598000\r\n  },\r\n  {\r\n    \"year\": 2018,\r\n    \"Goods\": 12686384000,\r\n    \"Services\": 16998152000\r\n  }\r\n]\r\n","import numeral from 'numeraljs'\r\n\r\nfunction formatValue(value) {\r\n  return numeral(value).format('($ 0.00 a)')\r\n}\r\n\r\nexport default {\r\n    keys: [\r\n      \"Goods\",\r\n      \"Services\"\r\n    ],\r\n    margin: {\r\n        \"top\": 50,\r\n        \"right\": 40,\r\n        \"bottom\": 80,\r\n        \"left\": 100\r\n    },\r\n    defs: [ ],\r\n    axisBottom: {\r\n        \"tickSize\": 5,\r\n        \"tickPadding\": 5,\r\n        \"tickRotation\": 0,\r\n        \"legend\": \"Year\",\r\n        \"legendPosition\": \"middle\",\r\n        \"legendOffset\": 32\r\n    },\r\n    axisLeft: {\r\n        \"tickSize\": 5,\r\n        \"tickPadding\": 5,\r\n        \"tickRotation\": 0,\r\n        \"legend\": \"Revenue\",\r\n        \"legendPosition\": \"middle\",\r\n        \"legendOffset\": -80,\r\n        \"format\": (value => {return formatValue(value)})\r\n    },\r\n    label: (data => {return formatValue(data.value)}),\r\n    tooltipFormat: (value => {return formatValue(value)}),\r\n    legends: [\r\n        {\r\n            dataFrom: 'keys',\r\n            anchor: 'bottom-right',\r\n            direction: 'column',\r\n            justify: false,\r\n            translateX: 0,\r\n            translateY: 60,\r\n            itemsSpacing: 2,\r\n            itemWidth: 100,\r\n            itemHeight: 20,\r\n            itemDirection: 'left-to-right',\r\n            itemOpacity: 0.85,\r\n            symbolSize: 20,\r\n            effects: [\r\n                {\r\n                    on: 'hover',\r\n                    style: {\r\n                        itemOpacity: 1\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n","import React from 'react'\r\nimport { ResponsiveBar } from '@nivo/bar'\r\n\r\nimport data from './data'\r\nimport config from './config'\r\n\r\nimport './DomesticEnvGoodServices.css'\r\n\r\nclass DomesticEnvGoodServices extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n          <div class=\"DomesticEnvGoodServices_Container\">\r\n            <div class=\"title\">\r\n              <h1>Revenues from domestic sales of environmental and clean technology goods and services, in Canada</h1>\r\n            </div>\r\n\r\n            <div class=\"chart\">\r\n                  <ResponsiveBar\r\n                      data={data}\r\n                      keys={config.keys}\r\n                      indexBy=\"year\"\r\n                      margin={config.margin}\r\n                      padding={0.3}\r\n                      colors={{ scheme: 'nivo' }}\r\n                      colorBy=\"id\"\r\n                      axisTop={null}\r\n                      axisRight={null}\r\n                      axisBottom={config.axisBottom}\r\n                      axisLeft={config.axisLeft}\r\n                      label={config.label}\r\n                      labelSkipWidth={12}\r\n                      labelSkipHeight={12}\r\n                      labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                      labelSkipWidth={12}\r\n                      labelSkipHeight={12}\r\n                      legends={config.legends}\r\n                      animate={true}\r\n                      motionStiffness={90}\r\n                      motionDamping={15}\r\n                      tooltipFormat={config.tooltipFormat}\r\n                  />\r\n              </div>\r\n\r\n              <div class=\"disclaimer\">\r\n                <p>Data sources:&nbsp;\r\n                  <a href=\"https://open.canada.ca/data/en/dataset/fc78a825-3386-487a-8d9a-984bf17a4dba\">https://open.canada.ca/data/en/dataset/fc78a825-3386-487a-8d9a-984bf17a4dba</a>\r\n                  <br />\r\n                  <strong>The data were rounded and formatted to make them easier to read.</strong>\r\n                  <br />\r\n                  <i>This information is provided “as is” without any waranty.</i>\r\n                </p>\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DomesticEnvGoodServices\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { DomesticEnvGoodServices } from './components'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div class=\"chart_container\">\n        <DomesticEnvGoodServices />\n      </div>\n    </div>\n  );\n}\n\n//<DomesticEnvGoodServices />\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}